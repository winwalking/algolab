{
  "compilerOptions": {
    // 사용하는 타입을 명시합니다. 여기서는 React와 React DOM을 명시합니다.
    "types": ["react", "react-dom"],

    // 컴파일된 파일이 저장될 디렉토리를 지정합니다. 여기서는 "static" 디렉토리에 저장됩니다.
    "outDir": "static",

    // 컴파일된 JavaScript의 대상 버전을 지정합니다. ES5로 설정하여 더 많은 환경에서 호환성을 가집니다.
    "target": "ES5",

    // ECMAScript 반복자를 다운레벨 트랜스파일링할지 여부를 지정합니다.
    "downlevelIteration": true,

    // TypeScript의 엄격한 타입 검사 옵션을 활성화합니다.
    "strict": true,

    // 모듈 시스템을 설정합니다. CommonJS는 Node.js 환경에서 사용하는 모듈 시스템입니다.
    "module": "commonjs",

    // ES 모듈 간 상호 운용성을 설정합니다. `import`와 `require`를 모두 사용할 수 있게 합니다.
    "esModuleInterop": true,

    "resolveJsonModule": true,  

    // 파일명 대소문자 일관성을 강제합니다. 다른 운영 체제 간의 호환성을 높입니다.
    "forceConsistentCasingInFileNames": false,

    // 사용할 JavaScript 라이브러리를 지정합니다. 여기서는 DOM API와 최신 ECMAScript 기능을 포함합니다.
    "lib": ["DOM", "DOM.Iterable", "ESNext"],

    // 타입 정의 파일을 검사하지 않도록 설정하여 컴파일 속도를 높입니다.
    "skipLibCheck": true,

    // JSX 문법을 컴파일할 방식을 지정합니다. React JSX로 컴파일합니다.
    "jsx": "react-jsx",

    // JavaScript 파일을 허용합니다. JavaScript 파일도 함께 컴파일할 수 있습니다.
    "allowJs": true,

    // 모듈의 기본 경로를 설정합니다. 여기서는 "./src"를 기준으로 합니다.
    "baseUrl": "./src",

    // 경로 별칭을 설정합니다. 별칭을 사용하여 모듈을 쉽게 불러올 수 있습니다.
    "paths": {
      "@/*": ["/*"],
      "@components/*": ["components/*"],
      "@config/*": ["config/*"],
      "@page/*": ["page/*"],
      "assets/*": ["assets/*"]
    }
  },
  // 컴파일 시 제외할 파일 및 디렉토리를 지정합니다. node_modules는 기본적으로 제외됩니다.
  "exclude": ["node_modules"],

  // 컴파일 시 포함할 파일을 지정합니다. TypeScript 및 TSX 파일을 모두 포함합니다.
  "include": ["**/*.ts", "**/*.tsx"]
}
